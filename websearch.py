import streamlit as st
from duckduckgo_search import DDGS
import time
import random
from fake_useragent import UserAgent

def perform_search(query, region='ru-ru', max_results=5, max_snippet_length=3000, retries=3, delay=1.5):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π User-Agent, –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    query - –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    region - —Ä–µ–≥–∏–æ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞
    max_results - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    max_snippet_length - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–Ω–∏–ø–ø–µ—Ç–∞
    retries - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    delay - –±–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ (—Å–µ–∫—É–Ω–¥—ã)
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    """
    ua = UserAgent()
    attempts = 0
    
    while attempts < retries:
        try:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π User-Agent –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            headers = {'User-Agent': ua.random}
            
            with DDGS(headers=headers) as ddgs:
                results = []
                st.sidebar.subheader("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞")
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É (0.5-2.5 —Å–µ–∫)
                sleep_time = delay + random.uniform(-0.5, 1.0)
                time.sleep(max(0.5, sleep_time))
                
                try:
                    search_results = ddgs.text(
                        query,
                        region=region,
                        max_results=max_results,
                        backend="lite"
                    )
                except Exception as e:
                    st.sidebar.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {str(e)}")
                    continue  # –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
                
                if not search_results:
                    st.sidebar.info("üîç –ü–æ–∏—Å–∫ –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                    return "–ü–æ–∏—Å–∫ –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
                
                for i, r in enumerate(search_results, 1):
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–ø–æ–ª–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    if 'body' not in r or not r['body']:
                        continue
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–Ω–∏–ø–ø–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    snippet = r['body'][:500] + "..." if len(r['body']) > 500 else r['body']
                    results.append(r)
                    
                    # –í—ã–≤–æ–¥–∏–º –≤ —Å–∞–π–¥–±–∞—Ä
                    with st.sidebar.expander(f"üìÑ {r.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}"):
                        st.write(snippet)
                        st.caption(f"URL: {r.get('href', '')}")
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
                formatted = []
                for i, r in enumerate(results, 1):
                    body = r.get('body', '')[:max_snippet_length]
                    if len(body) > max_snippet_length:
                        body = body[:max_snippet_length] + "..."
                        
                    formatted.append(f"–†–µ–∑—É–ª—å—Ç–∞—Ç {i}: {r.get('title', '')}\n{body}\nURL: {r.get('href', '')}\n")
                
                return "\n\n".join(formatted)
        
        except Exception as e:
            attempts += 1
            error_msg = f"‚õî –û—à–∏–±–∫–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempts}/{retries}): {str(e)}"
            st.sidebar.error(error_msg)
            
            if attempts < retries:
                # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —Å —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–µ–π
                sleep_time = delay * (2 ** attempts) + random.uniform(0, 2)
                time.sleep(sleep_time)
    
    # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –Ω–µ—É–¥–∞—á–µ–π
    st.sidebar.error("‚ùå –ü–æ–∏—Å–∫ –Ω–µ —É–¥–∞–ª—Å—è –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫")
    return "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
