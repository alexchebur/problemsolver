# prompts.py

# Этап 1: Формулирование проблемы и генерация запросов
PROMPT_FORMULATE_PROBLEM_AND_QUERIES = """
Вы - эксперт по решению проблем. Проанализируйте запрос пользователя и документ (если есть):

Запрос: {query}
Документ: {doc_text}

Ваши задачи:
1. Сформулируйте ключевую проблему
2. Проведите рассуждения (внутренний диалог из вытекающих друг из друга 10 шагов каждый вида: вопрос-ответ-сомнения-возражения-вывод) СТРОГО в формате каждого шага:
   [вопрос на уточнение проблемы]
   [ответ на вопрос]
   [аргументы ответа на вопрос]
   [сомнения в правильности ответа]
   [аргументы в пользу сомнений в правильности ответа]
   [возражение на сомнения]
   [аргументы в обоснование возражений на сомнения]
   [взвешенный вывод]
   ...
3. Создайте список из 2 поисковых запросов
4. Примените First Principles Thinking и System 2 Thinking
5. Избегайте запрещенного контента

Требования к формату:
- Начните вывод строго с "ПРОБЛЕМА:"
- Затем строго "РАССУЖДЕНИЯ:" с диалогом
- Завершите строго "ЗАПРОСЫ:"
- Каждый запрос должен начинаться с цифры и точки (1. ...)
- Никаких дополнительных пояснений после заголовков
- Пример:
ПРОБЛЕМА: [формулировка проблемы]
РАССУЖДЕНИЯ:
[Вопрос 1]
[Ответ 1]
[Аргументы ответа 1 на вопрос 1]
[Сомнение 1]
[Аргументы в пользу сомнения 1 в правильности ответа 1]
[Возражение на сомнение 1]
[Аргументы в обоснование возражений на сомнение 1]
[Взвешенный вывод 1]

[Вопрос 2] - ДОЛЖЕН быть адресован к выводу из предыдущего шага [Взвешенный вывод 1]
[Ответ 2]
...
ЗАПРОСЫ:
1. [Запрос 1]
2. [Запрос 2]
...
"""

# Этап 3: Применение когнитивной методики
PROMPT_APPLY_COGNITIVE_METHOD = """
Примените методику {method_name} к проблеме:

{problem_formulation}

Контекст:
{context}

Требования:
- Детально опишите процесс применения методики
- Сформулируйте выводы и решения
- Ответ должен быть не менее 9000 символов
- Используйте строгий анализ, избегайте общих фраз
- Для процессов и потоков пишите код визуализаций в формате Mermaid
- Требования к коду диаграмм Mermaid: 
1. Всегда начинайте с `graph TD` или `graph LR`
2. Используйте простые идентификаторы: A, B, C
3. Максимум 8 узлов на диаграмму
4. Текст в узлах должен быть кратким (3-5 слов)
5. Используйте только базовые формы: 
    - Прямоугольник: A["Текст"]
    - Круг: B(("Текст"))
    - Ромб: C{{"Текст"}}
6. Всегда завершайте команды точкой с запятой
7. Пример корректной диаграммы:
```mermaid
graph TD
    A["Начало"] --> B{{"Решение?"}};
    B -->|Да| C["Путь 1"];
    B -->|Нет| D["Путь 2"];
Строго запрещено:

Длинные тексты (более 100 символов)

Незавершенные узлы или диаграммы

Незакрытые фигурные или квадратные скобки

Пустые узлы

Сложные конструкции

Символы + - * > # в тексте надписей внутри фигур диаграмм
"""

#Этап 4: Генерация уточняющих запросов
PROMPT_GENERATE_REFINEMENT_QUERIES = """

1. Проведите рассуждения (внутренний диалог из вытекающих друг из друга 10 шагов каждый вида: вопрос-ответ-сомнения-возражения-вывод) СТРОГО в формате каждого шага:
[вопрос на уточнение проблемы]
[ответ на вопрос]
[аргументы ответа на вопрос]
[сомнения в правильности ответа]
[аргументы в пользу сомнений в правильности ответа]
[возражение на сомнения]
[аргументы в обоснование возражений на сомнения]
[взвешенный вывод]
...
Требования к формату рассуждений:
- Начните вывод строго с "ПРОБЛЕМА:"
- Затем строго "РАССУЖДЕНИЯ:" с диалогом
- Никаких дополнительных пояснений после заголовков
- Пример:
ПРОБЛЕМА: [формулировка проблемы]
РАССУЖДЕНИЯ:
[Вопрос 1]
[Ответ 1]
[Аргументы ответа 1 на вопрос 1]
[Сомнение 1]
[Аргументы в пользу сомнения 1 в правильности ответа 1]
[Возражение на сомнение 1]
[Аргументы в обоснование возражений на сомнение 1]
[Взвешенный вывод 1]

[Вопрос 2] - ДОЛЖЕН быть адресован к выводу из предыдущего шага [Взвешенный вывод 1]
[Ответ 2]
...

2. На основе проведенного анализа и рассуждений сформулируйте 5 уточняющих поисковых запросов,
которые помогут проверить гипотезы и углубить понимание решения:

{context}

Требования:

Запросы должны быть конкретными и направленными на проверку гипотез и углубленное понимание проблемы

Выведите только нумерованный список

Формат:

[Запрос 1]

[Запрос 2]

[Запрос 3]

[Запрос 4]

[Запрос 5]
"""

#Этап 5: Итоговые выводы
PROMPT_GENERATE_FINAL_CONCLUSIONS = """



На основе анализа сформулируйте итоговые выводы по проблеме:

{problem_formulation}

Контекст анализа:
{analysis_context}

Требования:

Выделите оптимальные решения и максимально детализированно их опишите (подробное описание решения, необходимые ресурсы, план, планируемый результат)

Ответ должен быть структурированным и содержательным

Не включайте технические детали поисковых запросов

Ваша задача - решить проблему пользователя, а не просто описать абстрактные пути

Выводы должны соответствовать предполагаемому результату выполнения запроса пользователя
"""
